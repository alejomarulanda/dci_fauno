Risk calculator

pip install openpyxl
pip install requests
pip install GDAL
pip install pyproj
pip install fiona
pip install shapely
pip install geopandas
pip install rasterio
pip install rasterstats
pip install networkx
pip install multiprocessing

https://github.com/tqdm/tqdm/issues/484

##########################################################

Service

pip install flask
pip install flask-rest-api
pip install PyJWT
pip install requests
pip install mongoengine


##########################################################

docker pull mongo:4.2
docker run --name fauno_db -p 27017:27017 -v D:/CIAT/Code/BID/dci_fauno/data/fauno_db/data:/data/db -e MONGO_INITDB_ROOT_USERNAME=mongoadmin -e MONGO_INITDB_ROOT_PASSWORD=secret -e MONGO_INITDB_DATABASE=fauno_db -d mongo:4.2

##########################################################

docker run -it --rm -v /dapadfs/:/dapadfs/ dapaciat/python:3.9-busterlatest /bin/bash

##########################################################

Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd fauno
  npm start

Happy hacking!

##########################################################

https://hub.docker.com/r/kartoza/geoserver/
https://github.com/kartoza/docker-geoserver

docker run -d -p 8600:8080 --name geoserver -e SAMPLE_DATA=false -e EXISTING_DATA_DIR=true -v D:/CIAT/Code/BID/dci_fauno/data/geoserver/data/:/opt/geoserver/data_dir/data/ kartoza/geoserver:latest
